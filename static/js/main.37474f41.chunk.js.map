{"version":3,"sources":["components/homework_2/Exercise2_2.tsx","components/homework_1/ExerciseSwitcher.tsx","components/homework_1/GreyCodeGenerator.tsx","components/homework_1/Exercise_1.tsx","components/homework_1/Exercise_2_Matrix.tsx","components/homework_1/Exercise_2.tsx","components/homework_1/Exercise_3_Matrix.tsx","components/homework_1/Exercise_3.tsx","components/homework_1/HomeWork_1.tsx","components/homework_2/SetBuilder.tsx","components/homework_2/Exercise1_2.tsx","components/homework_2/DecartMatrix.tsx","components/homework_2/ReflexiveModal.tsx","components/homework_2/SymetricModal.tsx","components/homework_2/TransitiveModal.tsx","components/homework_2/Exercise2_3.tsx","components/homework_2/HomeWork2.tsx","components/Navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AlgorithmType","ExerciseSwitcher","nextEx","currentEx","prevEx","Grid","container","columnSpacing","xs","sm","md","item","Button","variant","fullWidth","style","margin","onClick","disabled","StyledModal","styled","ModalUnstyled","Backdrop","width","height","bgcolor","border","p","px","pb","GreyCodeGenerator","useState","open","setOpen","anchorEl","setAnchorEl","greyCode","setGreyCode","handleClose","openMenu","Boolean","Box","textAlign","marginTop","onClose","BackdropComponent","sx","id","display","justifyContent","alignItems","IconButton","color","edge","size","Typography","undefined","event","currentTarget","anchorOrigin","vertical","horizontal","transformOrigin","map","menuItem","MenuItem","spacing","Paper","elevation","backgroundColor","overflowY","n","i","j","arr","push","generateGreyArr","output","answerStyle","fontWeight","padding","Exercise1","type","fillMatrix","name","V1","V2","V3","V4","V5","V6","fillIncidenceMatrix","q1","q2","q3","q4","q5","q6","q7","q8","q9","matrixData","incidentMatrix","Exercise2Matrix","TableContainer","component","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","row","scope","Exercise2","src","Exercise3Matrix","Exercise3","HomeWork1","exercies","currentExercise","setCurrentExercise","length","getExercise","SetBuilder","x","y","matrix","setMatrix","xAxis","setXAxis","yAxis","setYAxis","canSetRelation","setCanSetRelation","relations","setRelation","answer","setAnswer","canRun","setCanRun","useEffect","buildSet","cleantUpState","buildXAxis","buildYAxis","value","error","revalidateCanSetRelation","checkIfValidInput","toLowerCase","checkIfCanRun","console","log","maxWidth","marginLeft","index","Avatar","TextField","placeholder","onChange","items","onXAxisChange","target","inputProps","onYAxisChange","row2","index1","col","changeRelation","columnLength","match","checkIfFunction","newRelations","xValue","yValue","relation","generateImages","isInjection","checkIfInjection","isSurjective","some","checkIfSurjective","Exercise1_2","anchorElX","setAnchorElX","anchorElY","setAnchorElY","setX","setY","openXMenu","openYMenu","DecartMatrix","setMatrixCallback","givenSet","handleClick","ReflexiveModal","show","closeHandler","REFLEXIVE","SymetricModal","SYMMETRIC","TransitiveModal","TRANSITIVE","Exercise2_2","isRelationSet","setIsRelationSet","tuples","setTuples","showReflexive","setShowReflexive","showSymetric","setShowSymetric","showTransitive","setShowTransitive","handleModalOpen","handleModalClose","checkIfRelationSet","isReflexive","checkIfReflexive","isSymetric","checkIfSymetric","isTransitive","k","checkIfTransitive","letters","newTuples","newRelation","buildTuples","Exercise2_3","HomeWork2","drawerWidth","openedMixin","theme","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","breakpoints","up","DrawerHeader","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","homeWorkObjects","routePath","MiniDrawer","useTheme","React","CssBaseline","position","Toolbar","marginRight","noWrap","direction","Divider","List","homework","ListItem","button","Link","to","ListItemIcon","flexDirection","fontSize","ListItemText","primary","flexGrow","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37474f41.chunk.js","sourcesContent":["import {\n  Paper,\n  Typography,\n  Grid,\n  Box,\n  Button,\n  Modal,\n  IconButton,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport DecartMatrix from \"./DecartMatrix\";\nimport { ModalUnstyled } from \"@mui/core\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { styled } from \"@mui/system\";\nimport ReflexiveModal from \"./ReflexiveModal\";\nimport SymetricModal from \"./SymetricModal\";\nimport TransitiveModal from \"./TransitiveModal\";\nexport enum AlgorithmType {\n  REFLEXIVE,\n  SYMMETRIC,\n  TRANSITIVE,\n}\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled(\"div\")`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 1200,\n  height: 750,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nconst Exercise2_2 = () => {\n  const [matrix, setMatrix] = useState<number[][]>([]);\n\n  const [isRelationSet, setIsRelationSet] = useState(false);\n\n  const [tuples, setTuples] = useState<string[]>([]);\n\n  const [answer, setAnswer] = useState(\"\");\n\n  const [showReflexive, setShowReflexive] = useState(false);\n\n  const [showSymetric, setShowSymetric] = useState(false);\n\n  const [showTransitive, setShowTransitive] = useState(false);\n\n  const handleModalOpen = (type: AlgorithmType) => {\n    switch (type) {\n      case AlgorithmType.REFLEXIVE:\n        setShowReflexive(true);\n        break;\n      case AlgorithmType.SYMMETRIC:\n        setShowSymetric(true);\n        break;\n      case AlgorithmType.TRANSITIVE:\n        setShowTransitive(true);\n        break;\n    }\n  };\n\n  const handleModalClose = (type: AlgorithmType) => {\n    switch (type) {\n      case AlgorithmType.REFLEXIVE:\n        setShowReflexive(false);\n        break;\n      case AlgorithmType.SYMMETRIC:\n        setShowSymetric(false);\n        break;\n      case AlgorithmType.TRANSITIVE:\n        setShowTransitive(false);\n        break;\n    }\n  };\n\n  useEffect(() => {\n    checkIfRelationSet();\n  }, [matrix]);\n\n  const checkIfReflexive = () => {\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (i === j && matrix[i][j] !== 1) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  const checkIfSymetric = () => {\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (i !== j) {\n          if (matrix[i][j] === 1 && matrix[j][i] !== 1) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  };\n\n  const checkIfTransitive = () => {\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (i !== j && matrix[i][j] === 1) {\n          for (let k = 0; k <= i; k++) {\n            if (j !== k && matrix[j][k] === 1 && matrix[i][k] !== 1) {\n              return false;\n            }\n          }\n        }\n      }\n    }\n    return true;\n  };\n\n  const checkIfRelationSet = () => {\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (matrix[i][j] === 1) {\n          setIsRelationSet(true);\n          return;\n        }\n      }\n    }\n    setIsRelationSet(false);\n  };\n\n  const buildTuples = () => {\n    const letters = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"];\n    const newTuples = [];\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (matrix[i][j] === 1) {\n          const newRelation = `<${letters[j]}, ${letters[i]}>`;\n          newTuples.push(newRelation);\n        }\n      }\n    }\n    setTuples(newTuples);\n    console.log(tuples);\n  };\n\n  const findAnswer = () => {\n    const isReflexive = checkIfReflexive();\n    const isSymetric = checkIfSymetric();\n    const isTransitive = checkIfTransitive();\n    buildTuples();\n\n    if (isReflexive && isSymetric && isTransitive) {\n      setAnswer(\"Ir refleksīva, ir simetriska un transitīva => ir ekvivalence\");\n    } else {\n      let output = \"Ir\";\n\n      if (isReflexive) {\n        output += \" refleksīva\";\n      } else if (isSymetric) {\n        output += \" simetriska\";\n      } else if (isTransitive) {\n        output += \" transitīva\";\n      }\n\n      setAnswer(output);\n    }\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        backgroundColor: \"#d9e9e4\",\n        marginTop: \"2rem\",\n      }}\n    >\n      <Grid container xs={12} spacing={0} justifyContent=\"center\">\n        <Grid item xs={5} style={{ padding: \"1rem\" }}>\n          <DecartMatrix setMatrixCallback={setMatrix}></DecartMatrix>\n        </Grid>\n        <Grid item xs={7} style={{ padding: \"1rem\" }}>\n          <Paper\n            elevation={5}\n            style={{\n              backgroundColor: \"#98AFBA\",\n              height: \"50%\",\n              width: \"100%\",\n            }}\n          >\n            <Grid\n              item\n              xs={12}\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n              <Button\n                variant=\"contained\"\n                onClick={findAnswer}\n                disabled={!isRelationSet}\n                style={{ marginTop: \"1rem\" }}\n              >\n                Meklēt ekvivalences īpašības\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              {answer.length > 0 ? (\n                <Typography textAlign=\"center\" variant=\"h6\">\n                  {answer}\n                </Typography>\n              ) : null}\n            </Grid>\n            <Grid item xs={12}>\n              {tuples.length > 0 && answer.length > 0 ? (\n                <Typography textAlign=\"center\" variant=\"h6\">\n                  R =\n                  {tuples.map((item, index) => (\n                    <span>\n                      {item} {index !== tuples.length - 1 ? \",\" : \"\"}{\" \"}\n                    </span>\n                  ))}\n                </Typography>\n              ) : null}\n            </Grid>\n            <Grid\n              xs={12}\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                marginTop: \"1rem\",\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                onClick={() => handleModalOpen(AlgorithmType.REFLEXIVE)}\n                // disabled={!isRelationSet}\n                style={{ marginTop: \"1rem\" }}\n              >\n                Refleksivitātes algoritms\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={() => handleModalOpen(AlgorithmType.SYMMETRIC)}\n                // disabled={!isRelationSet}\n                style={{ marginTop: \"1rem\" }}\n              >\n                Simetriskuma algoritms\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={() => handleModalOpen(AlgorithmType.TRANSITIVE)}\n                // disabled={!isRelationSet}\n                style={{ marginTop: \"1rem\" }}\n              >\n                Transitivitātes algoritms\n              </Button>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n      <ReflexiveModal\n        show={showReflexive}\n        closeHandler={handleModalClose}\n      ></ReflexiveModal>\n      <SymetricModal show={showSymetric} closeHandler={handleModalClose} />\n      <TransitiveModal show={showTransitive} closeHandler={handleModalClose} />\n    </Paper>\n  );\n};\n\nexport default Exercise2_2;\n","import Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\n\nconst ExerciseSwitcher = ({ nextEx, currentEx, prevEx }: any) => {\n  return (\n    <Grid container columnSpacing={{ xs: 2, sm: 2, md: 3 }} xs={10}>\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          fullWidth\n          style={{ margin: \"0.5rem\" }}\n          onClick={nextEx}\n          disabled={currentEx === 2}\n        >\n          Nākamais uzdevums\n        </Button>\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          fullWidth\n          style={{ margin: \"0.5rem\" }}\n          disabled={currentEx === 0}\n          onClick={prevEx}\n        >\n          Iepriekšējais uzdevums\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ExerciseSwitcher;\n","import { ModalUnstyled } from \"@mui/core\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/system\";\nimport { IconButton, Menu, MenuItem, Paper, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled(\"div\")`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 1200,\n  height: 750,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  p: 2,\n  px: 4,\n  pb: 3,\n};\nconst GreyCodeGenerator = () => {\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [greyCode, setGreyCode] = useState(5);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const openMenu = Boolean(anchorEl);\n  const handleOpenMenu = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const greyCodeMenu = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  const changeGreyCode = (choice: number): void => {\n    setGreyCode(choice);\n    setAnchorEl(null);\n  };\n\n  const generateGreyArr = (n: number): string[] => {\n    if (n <= 0) return [];\n\n    let arr = [];\n\n    arr.push(\"0\");\n    arr.push(\"1\");\n\n    let i, j;\n    for (i = 2; i < 1 << n; i = i << 1) {\n      for (j = i - 1; j >= 0; j--) {\n        arr.push(arr[j]);\n      }\n\n      for (j = 0; j < i; j++) {\n        arr[j] = \"0\" + arr[j];\n      }\n\n      for (j = i; j < 2 * i; j++) arr[j] = \"1\" + arr[j];\n    }\n\n    return arr;\n  };\n\n  return (\n    <Box textAlign=\"center\">\n      <Button\n        variant=\"contained\"\n        style={{ marginTop: \"1rem\" }}\n        onClick={handleOpen}\n      >\n        Greja Koda Generators\n      </Button>\n      <StyledModal\n        aria-labelledby=\"unstyled-modal-title\"\n        aria-describedby=\"unstyled-modal-description\"\n        open={open}\n        onClose={handleClose}\n        BackdropComponent={Backdrop}\n      >\n        <Box sx={style}>\n          <Grid container>\n            <Grid item xs={11}>\n              <h2 id=\"unstyled-modal-title\">Grey Code</h2>\n            </Grid>\n            <Grid\n              item\n              xs={1}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <IconButton\n                color=\"inherit\"\n                edge=\"end\"\n                size=\"large\"\n                onClick={handleClose}\n              >\n                <CloseIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n          <Grid container xs={3}>\n            <Grid item xs={2}>\n              <Typography variant=\"h5\" style={{ marginTop: \"5px\" }}>\n                N=\n              </Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <Button\n                id=\"demo-positioned-button\"\n                aria-controls=\"demo-positioned-menu\"\n                aria-haspopup=\"true\"\n                aria-expanded={openMenu ? \"true\" : undefined}\n                onClick={handleOpenMenu}\n              >\n                <Typography variant=\"h5\">{greyCode}</Typography>\n                <ArrowDropDownIcon />\n              </Button>\n            </Grid>\n          </Grid>\n          <Menu\n            id=\"demo-positioned-menu\"\n            aria-labelledby=\"demo-positioned-button\"\n            anchorEl={anchorEl}\n            open={openMenu}\n            onClose={handleCloseMenu}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n            }}\n          >\n            {greyCodeMenu.map((menuItem) => (\n              <MenuItem onClick={() => changeGreyCode(menuItem)}>\n                {menuItem}\n              </MenuItem>\n            ))}\n          </Menu>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <Paper\n                elevation={3}\n                style={{\n                  backgroundColor: \"#95b0b5\",\n                  height: \"600px\",\n                  overflowY: \"scroll\",\n                }}\n              >\n                {generateGreyArr(greyCode).map((output) => (\n                  <Typography variant=\"h6\" textAlign=\"center\">\n                    {output}\n                  </Typography>\n                ))}\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper\n                elevation={3}\n                style={{\n                  backgroundColor: \"#95b0b5\",\n                  height: \"600px\",\n                  overflowY: \"scroll\",\n                }}\n              >\n                <pre style={{ color: \"blue\" }}>{`function generateGreyarr(n) {\n    if (n &lt;= 0) return;\n\n    // 'arr' seit bus visi genereti kodi\n    let arr = [];\n\n    //sakam ar vienu bitu\n    arr.push(\"0\");\n    arr.push(\"1\");\n\n    // Katra iteracija genere  2*i kodus \n    //no ieprieks generetajiem i kodiem.\n    let i, j;\n    // 1'&lt;&lt;'nvar aizvietot ar Math.pow(i,2)\n    for (i = 2; i &lt; 1 &lt;&lt; n; i = i &lt;&lt; 1) {\n\n        //Ievieto iepreiks generatus kodus\n        //bet apgriezta seciba. arr satur vienadus kodus\n        for (j = i - 1; j &gt;= 0; j--) {\n            arr.push(arr[j]);\n        }\n        //pievieno 0 pirmaijai pusei\n        for (j = 0; j &lt; i; j++) {\n            arr[j] = \"0\" + arr[j];\n        }\n        // pievieno 1 otrai pusei\n        for (j = i; j &lt; 2 * i; j++) {\n            arr[j] = \"1\" + arr[j];\n        }\n    }\n\n    return arr;\n}\n               `}</pre>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Box>\n      </StyledModal>\n    </Box>\n  );\n};\n\nexport default GreyCodeGenerator;\n","import { Box, Button, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport GreyCodeGenerator from \"./GreyCodeGenerator\";\n\nconst answerStyle = {\n  fontWeight: 400,\n  padding: \"1rem\",\n};\n\nconst Exercise1 = () => {\n  return (\n    <Grid container item xs={12} spacing={2} style={{ marginTop: \"1rem\" }}>\n      <Grid item xs={6}>\n        <Paper\n          elevation={3}\n          style={{ height: \"80%\", backgroundColor: \"#d9e9e4\" }}\n        >\n          <Typography variant=\"h5\" textAlign=\"center\">\n            Dota binārā kopa (n- elementu skaits).\n          </Typography>\n          <ol type=\"a\">\n            <Typography variant=\"h6\">\n              <li>Paskaidrot Greja koda algoritmu.</li>\n            </Typography>\n            <Typography variant=\"h6\">\n              <li>\n                Noteikt visas apakškopas dotai kopai, izmantojot Greja kodu (n=5\n                - varianta numurs ir pārskaitlis vai n=7 - varianta numurs ir\n                nepārskaitlis).\n              </li>\n            </Typography>\n            <Typography variant=\"h6\">\n              <li>\n                Dod reālas kopas piemēru (tehniskas sistēmas kopas piemērs, ja\n                varianta numurs ir pārskaitlis; kopas piemērs no dabas, ja\n                varianta numurs ir nepārskaitlis) un noteikt visas apakškopas\n                dotai kopai, izmantojot Greja kodu.\n              </li>\n            </Typography>\n            <Typography variant=\"h6\">\n              <li>\n                Papildjautājums: Kādi vel eksistē algoritmi, lai noteikt visas\n                apakškopas dotai kopai?\n              </li>\n            </Typography>\n          </ol>\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper\n          elevation={3}\n          style={{ height: \"550px\", backgroundColor: \"#d9e9e4\" }}\n        >\n          <Typography variant=\"h6\" textAlign=\"center\">\n            a. Paskaidrot Greja koda algoritmu.\n          </Typography>\n          <Typography variant=\"h6\" style={answerStyle}>\n            Greja kods ir tāda kārtība binārajā sistēmā ka divas secīgas\n            vērtības atšķiras tikai ar vienu bitu.\n          </Typography>\n          <Typography variant=\"h6\" textAlign=\"center\">\n            a,b. Greja koda algoritms\n          </Typography>\n          <GreyCodeGenerator></GreyCodeGenerator>\n          <Typography variant=\"h6\" textAlign=\"center\">\n            c. Dod reālas kopas piemēru\n          </Typography>\n          <Paper elevation={0} style={{ backgroundColor: \"#d9e9e4\" }}>\n            Greja kodu pielieto mainīgo digitālo signālu pārraidei, ja nav\n            sinhronizācijas takta. Greja kodu pielieto bieži vien leņķa\n            kodētājos. Piemēram mums ir disks ar 16 stāvokļiem kas raksturo\n            pagrieziena leņķi. Katrs stāvoklis var but aprkastīts ar bināro\n            skaitli.(0 - 0000, 1-0001, 2-0010,3-0011 un ta talāk) Lai aprakstīto\n            šos skaitļus mehāniski uz diska tiek izveidoti caurumi kas var būt\n            parvērsti bināraja skaitlī. No abam pusem mums atrodas diodes , kad\n            disks tiek pagriezts atkarība no tā kāds ir stāvoklis uz\n            diska,gaisma iet caur konkrētiem caurumiem cauri diskam, tas velāk\n            varbūt pārveidots binārajā skaitlī, kas velāk\n          </Paper>\n          <Typography variant=\"h6\" textAlign=\"center\">\n            d. Kādi vel eksistē algoritmi, lai noteikt visas apakškopas dotai\n            kopai?\n          </Typography>\n          <Typography variant=\"h6\" textAlign=\"center\">\n            Anti-Grey kods\n          </Typography>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Exercise1;\n","import { Fragment } from \"react\";\nimport {\n  TableContainer,\n  Typography,\n  TableBody,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  Paper,\n} from \"@mui/material\";\n\nconst fillMatrix = (\n  name: string,\n  V1: string,\n  V2: string,\n  V3: string,\n  V4: string,\n  V5: string,\n  V6: string\n) => {\n  return { name, V1, V2, V3, V4, V5, V6 };\n};\n\nconst fillIncidenceMatrix = (\n  name: string,\n  q1: string,\n  q2: string,\n  q3: string,\n  q4: string,\n  q5: string,\n  q6: string,\n  q7: string,\n  q8: string,\n  q9: string\n) => {\n  return { name, q1, q2, q3, q4, q5, q6, q7, q8, q9 };\n};\n\nconst matrixData = [\n  fillMatrix(\"V1\", \"0\", \"1\", \"1\", \"0\", \"1\", \"0\"),\n  fillMatrix(\"V2\", \"1\", \"0\", \"1\", \"0\", \"1\", \"0\"),\n  fillMatrix(\"V3\", \"1\", \"1\", \"0\", \"1\", \"0\", \"0\"),\n  fillMatrix(\"V4\", \"0\", \"0\", \"1\", \"0\", \"1\", \"1\"),\n  fillMatrix(\"V5\", \"1\", \"1\", \"0\", \"1\", \"0\", \"1\"),\n  fillMatrix(\"V6\", \"0\", \"0\", \"0\", \"1\", \"1\", \"0\"),\n];\n\nconst incidentMatrix = [\n  fillIncidenceMatrix(\"V1\", \"1\", \"1\", \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"),\n  fillIncidenceMatrix(\"V2\", \"0\", \"1\", \"0\", \"1\", \"1\", \"0\", \"0\", \"0\", \"0\"),\n  fillIncidenceMatrix(\"V3\", \"1\", \"0\", \"0\", \"0\", \"1\", \"1\", \"0\", \"0\", \"0\"),\n  fillIncidenceMatrix(\"V4\", \"0\", \"0\", \"0\", \"0\", \"0\", \"1\", \"1\", \"1\", \"0\"),\n  fillIncidenceMatrix(\"V5\", \"0\", \"0\", \"1\", \"1\", \"0\", \"0\", \"0\", \"1\", \"1\"),\n  fillIncidenceMatrix(\"V6\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"1\"),\n];\n\nconst Exercise2Matrix = () => {\n  return (\n    <Fragment>\n      <Typography variant=\"h5\" textAlign=\"center\">\n        Blakusvirsotņu Matrica\n      </Typography>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\" height=\"10px\" width=\"15px\"></TableCell>\n              <TableCell\n                align=\"right\"\n                height=\"10px\"\n                width=\"15px\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V1</Typography>\n              </TableCell>\n              <TableCell\n                height=\"10px\"\n                width=\"15px\"\n                align=\"right\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V2</Typography>\n              </TableCell>\n              <TableCell\n                height=\"10px\"\n                width=\"15px\"\n                align=\"right\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V3</Typography>\n              </TableCell>\n              <TableCell\n                height=\"10px\"\n                width=\"15px\"\n                align=\"right\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V4</Typography>\n              </TableCell>\n              <TableCell\n                height=\"10px\"\n                width=\"15px\"\n                align=\"right\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V5</Typography>\n              </TableCell>\n              <TableCell\n                height=\"10px\"\n                width=\"15px\"\n                align=\"right\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V6</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {matrixData.map((row) => (\n              <TableRow\n                key={row.name}\n                sx={{\n                  \"&:last-child td, &:last-child th\": { border: 0 },\n                }}\n              >\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  align=\"center\"\n                  style={{ backgroundColor: \"#00a9c9\" }}\n                  height=\"10px\"\n                  width=\"15px\"\n                >\n                  <Typography variant=\"h6\"> {row.name}</Typography>\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V1}\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V2}\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V3}\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V4}\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V5}\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V6}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Typography variant=\"h5\" textAlign=\"center\">\n        Incidentes Matrica\n      </Typography>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\"></TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q1</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q2</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q3</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q4</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q5</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q6</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q7</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q8</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q9</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {incidentMatrix.map((row) => (\n              <TableRow\n                key={row.name}\n                sx={{\n                  \"&:last-child td, &:last-child th\": { border: 0 },\n                }}\n              >\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  align=\"center\"\n                  style={{ backgroundColor: \"#00a9c9\" }}\n                >\n                  <Typography variant=\"h6\"> {row.name}</Typography>\n                </TableCell>\n                <TableCell align=\"right\">{row.q1}</TableCell>\n                <TableCell align=\"right\">{row.q2}</TableCell>\n                <TableCell align=\"right\">{row.q3}</TableCell>\n                <TableCell align=\"right\">{row.q4}</TableCell>\n                <TableCell align=\"right\">{row.q5}</TableCell>\n                <TableCell align=\"right\">{row.q6}</TableCell>\n                <TableCell align=\"right\">{row.q7}</TableCell>\n                <TableCell align=\"right\">{row.q8}</TableCell>\n                <TableCell align=\"right\">{row.q9}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default Exercise2Matrix;\n","import Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { Box } from \"@mui/system\";\nimport Exercise2Matrix from \"./Exercise_2_Matrix\";\n\nconst Exercise2 = () => {\n  return (\n    <Grid container item xs={12} spacing={2} style={{ marginTop: \"1rem\" }}>\n      <Grid item xs={6}>\n        <Paper\n          elevation={3}\n          style={{ height: \"80%\", backgroundColor: \"#d9e9e4\" }}\n        >\n          <Typography variant=\"h5\" textAlign=\"center\">\n            Dots grafs. Uzrakstīt tā blakusvirsotņu matricu un incidentes\n            matricu.\n          </Typography>\n          <Box display=\"flex\" justifyContent=\"center\" marginTop=\"5rem\">\n            <img src=\"/homework1/uzd_2.png\" />\n          </Box>\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper\n          elevation={3}\n          style={{\n            height: \"550px\",\n            backgroundColor: \"#d9e9e4\",\n            overflowY: \"scroll\",\n          }}\n        >\n          <Exercise2Matrix></Exercise2Matrix>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Exercise2;\n","import {\n  Typography,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TableHead,\n  TableBody,\n  Table,\n  Paper,\n} from \"@mui/material\";\nimport { Fragment } from \"react\";\n\nconst fillMatrix = (\n  name: string,\n  V1: string,\n  V2: string,\n  V3: string,\n  V4: string,\n  V5: string,\n  V6: string\n) => {\n  return { name, V1, V2, V3, V4, V5, V6 };\n};\nconst fillIncidenceMatrix = (\n  name: string,\n  q1: string,\n  q2: string,\n  q3: string,\n  q4: string,\n  q5: string,\n  q6: string,\n  q7: string\n) => {\n  return { name, q1, q2, q3, q4, q5, q6, q7 };\n};\n\nconst incidentMatrix = [\n  fillIncidenceMatrix(\"V1\", \"+1\", \"+1\", \"0\", \"0\", \"0\", \"0\", \"0\"),\n  fillIncidenceMatrix(\"V2\", \"-1\", \"0\", \"-1\", \"0\", \"0\", \"0\", \"0\"),\n  fillIncidenceMatrix(\"V3\", \"0\", \"-1\", \"+1\", \"+1\", \"0\", \"0\", \"0\"),\n  fillIncidenceMatrix(\"V4\", \"0\", \"0\", \"0\", \"-1\", \"-1\", \"0\", \"0\"),\n  fillIncidenceMatrix(\"V5\", \"0\", \"0\", \"0\", \"0\", \"+1\", \"+1\", \"-1\"),\n  fillIncidenceMatrix(\"V6\", \"0\", \"0\", \"0\", \"0\", \"0\", \"-1\", \"+1\"),\n];\n\nconst matrixData = [\n  fillMatrix(\"V1\", \"0\", \"1\", \"1\", \"0\", \"0\", \"0\"),\n  fillMatrix(\"V2\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"),\n  fillMatrix(\"V3\", \"0\", \"1\", \"0\", \"1\", \"0\", \"0\"),\n  fillMatrix(\"V4\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"),\n  fillMatrix(\"V5\", \"0\", \"0\", \"0\", \"1\", \"0\", \"1\"),\n  fillMatrix(\"V6\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\"),\n];\nconst Exercise3Matrix = () => {\n  return (\n    <Fragment>\n      <Typography variant=\"h5\" textAlign=\"center\">\n        Blakusvirsotņu Matrica\n      </Typography>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\" height=\"10px\" width=\"15px\"></TableCell>\n              <TableCell\n                align=\"right\"\n                height=\"10px\"\n                width=\"15px\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V1</Typography>\n              </TableCell>\n              <TableCell\n                height=\"10px\"\n                width=\"15px\"\n                align=\"right\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V2</Typography>\n              </TableCell>\n              <TableCell\n                height=\"10px\"\n                width=\"15px\"\n                align=\"right\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V3</Typography>\n              </TableCell>\n              <TableCell\n                height=\"10px\"\n                width=\"15px\"\n                align=\"right\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V4</Typography>\n              </TableCell>\n              <TableCell\n                height=\"10px\"\n                width=\"15px\"\n                align=\"right\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V5</Typography>\n              </TableCell>\n              <TableCell\n                height=\"10px\"\n                width=\"15px\"\n                align=\"right\"\n                style={{ backgroundColor: \"#00a9c9\" }}\n              >\n                <Typography variant=\"h6\">V6</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {matrixData.map((row) => (\n              <TableRow\n                key={row.name}\n                sx={{\n                  \"&:last-child td, &:last-child th\": { border: 0 },\n                }}\n              >\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  align=\"center\"\n                  style={{ backgroundColor: \"#00a9c9\" }}\n                  height=\"10px\"\n                  width=\"15px\"\n                >\n                  <Typography variant=\"h6\"> {row.name}</Typography>\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V1}\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V2}\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V3}\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V4}\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V5}\n                </TableCell>\n                <TableCell height=\"10px\" width=\"15px\" align=\"right\">\n                  {row.V6}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Typography variant=\"h5\" textAlign=\"center\">\n        Incidentes Matrica\n      </Typography>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\"></TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q1</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q2</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q3</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q4</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q5</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q6</Typography>\n              </TableCell>\n              <TableCell align=\"right\" style={{ backgroundColor: \"#00a9c9\" }}>\n                <Typography variant=\"h6\">q7</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {incidentMatrix.map((row) => (\n              <TableRow\n                key={row.name}\n                sx={{\n                  \"&:last-child td, &:last-child th\": { border: 0 },\n                }}\n              >\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  align=\"center\"\n                  style={{ backgroundColor: \"#00a9c9\" }}\n                >\n                  <Typography variant=\"h6\"> {row.name}</Typography>\n                </TableCell>\n                <TableCell align=\"right\">{row.q1}</TableCell>\n                <TableCell align=\"right\">{row.q2}</TableCell>\n                <TableCell align=\"right\">{row.q3}</TableCell>\n                <TableCell align=\"right\">{row.q4}</TableCell>\n                <TableCell align=\"right\">{row.q5}</TableCell>\n                <TableCell align=\"right\">{row.q6}</TableCell>\n                <TableCell align=\"right\">{row.q7}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default Exercise3Matrix;\n","import { Grid, Paper, Typography, Box } from \"@mui/material\";\nimport Exercise3Matrix from \"./Exercise_3_Matrix\";\n\nconst Exercise3 = () => {\n  return (\n    <Grid container item xs={12} spacing={2} style={{ marginTop: \"1rem\" }}>\n      <Grid item xs={6}>\n        <Paper\n          elevation={3}\n          style={{ height: \"80%\", backgroundColor: \"#d9e9e4\" }}\n        >\n          <Typography variant=\"h5\" textAlign=\"center\">\n            Dots grafs. Uzrakstīt tā blakusvirsotņu matricu un incidentes\n            matricu.\n          </Typography>\n          <Box display=\"flex\" justifyContent=\"center\" marginTop=\"5rem\">\n            <img src=\"/homework1/uzd_3.png\" />\n          </Box>\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper\n          elevation={3}\n          style={{\n            height: \"550px\",\n            backgroundColor: \"#d9e9e4\",\n            overflowY: \"scroll\",\n          }}\n        >\n          <Exercise3Matrix></Exercise3Matrix>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Exercise3;\n","import Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport ExerciseSwitcher from \"./ExerciseSwitcher\";\nimport Exercise1 from \"./Exercise_1\";\nimport Exercise2 from \"./Exercise_2\";\nimport Exercise3 from \"./Exercise_3\";\n\ninterface Exercise {\n  name: string;\n}\n\nconst HomeWork1 = () => {\n  const exercies: Exercise[] = [\n    { name: \"1.Uzdevums\" },\n    { name: \"2.Uzdevums\" },\n    { name: \"3.Uzdevums\" },\n  ];\n\n  const [currentExercise, setCurrentExercise] = useState(0);\n\n  const handleNextEx = (): void => {\n    if (currentExercise !== exercies.length - 1) {\n      setCurrentExercise(currentExercise + 1);\n    }\n  };\n\n  const handlePrevEx = (): void => {\n    if (currentExercise !== 0) {\n      setCurrentExercise(currentExercise - 1);\n    }\n  };\n\n  const getExercise = () => {\n    switch (currentExercise) {\n      case 0:\n        return <Exercise1></Exercise1>;\n      case 1:\n        return <Exercise2></Exercise2>;\n      case 2:\n        return <Exercise3></Exercise3>;\n    }\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12} style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Grid item xs={9}>\n          <Typography variant=\"h2\" component=\"h2\">\n            {exercies[currentExercise].name}\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <ExerciseSwitcher\n            nextEx={handleNextEx}\n            currentEx={currentExercise}\n            prevEx={handlePrevEx}\n          ></ExerciseSwitcher>\n        </Grid>\n      </Grid>\n      {getExercise()}\n    </Grid>\n  );\n};\n\nexport default HomeWork1;\n","import {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n  TextField,\n  Grid,\n  Button,\n  Avatar,\n} from \"@mui/material\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport CheckIcon from \"@mui/icons-material/Check\";\n\nconst SetBuilder = ({ x, y }: { x: number; y: number }) => {\n  const [matrix, setMatrix] = useState<number[][]>([]);\n  const [xAxis, setXAxis] = useState<any[]>([]);\n  const [yAxis, setYAxis] = useState<any[]>([]);\n  const [canSetRelation, setCanSetRelation] = useState(false);\n  const [relations, setRelation] = useState<string[]>([]);\n  const [answer, setAnswer] = useState(\"\");\n  const [canRun, setCanRun] = useState(false);\n\n  useEffect(() => {\n    buildSet();\n  }, [x, y]);\n\n  useEffect(() => {\n    cleantUpState();\n    buildXAxis(x);\n    buildYAxis(y);\n  }, [x, y]);\n\n  const cleantUpState = () => {\n    setCanSetRelation(false);\n    setRelation([]);\n    setAnswer(\"\");\n    setCanRun(false);\n  };\n\n  const buildSet = () => {\n    let output = [];\n    for (let i = 0; i < y; i++) {\n      let row = [];\n      for (let j = 0; j < x; j++) {\n        row.push(0);\n        if (j === x - 1) {\n          output.push(row);\n        }\n      }\n    }\n\n    setMatrix(output);\n  };\n  const buildXAxis = (x: number) => {\n    const xAxis = [];\n\n    for (let i = 0; i <= x; i++) {\n      xAxis.push({ value: \"?\", error: true });\n    }\n\n    setXAxis(xAxis);\n  };\n\n  const buildYAxis = (y: number) => {\n    const yAxis = [];\n    for (let i = 0; i < y; i++) {\n      yAxis.push({ value: \"?\", error: true });\n    }\n\n    setYAxis(yAxis);\n    //revalidateCanSetRelation()\n  };\n\n  const onXAxisChange = (index: number, value: any) => {\n    let items = [...xAxis];\n\n    items[index].error = checkIfValidInput(value);\n    items[index].value = value;\n    setXAxis(items);\n\n    revalidateCanSetRelation();\n  };\n\n  const onYAxisChange = (index: number, value: any) => {\n    let items = [...yAxis];\n\n    items[index].error = checkIfValidInput(value);\n    items[index].value = value;\n    setYAxis(items);\n\n    revalidateCanSetRelation();\n  };\n\n  const revalidateCanSetRelation = (): void => {\n    for (let i = 1; i < xAxis.length; i++) {\n      if (xAxis[i].value === \"?\" || xAxis[i].error) {\n        setCanSetRelation(false);\n        return;\n      }\n    }\n    for (let y of yAxis) {\n      if (y.value === \"?\" || y.error) {\n        setCanSetRelation(false);\n        return;\n      }\n    }\n\n    setCanSetRelation(true);\n  };\n\n  const checkIfValidInput = (value: any): boolean => {\n    if (value === undefined || value === null) {\n      return false;\n    }\n    for (let x of xAxis) {\n      if (x.value.toLowerCase() === value.toLowerCase()) {\n        return true;\n      }\n    }\n\n    for (let y of yAxis) {\n      if (y.value.toLowerCase() === value.toLowerCase()) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const changeRelation = (row: number, col: number) => {\n    if (!canSetRelation) {\n      return;\n    }\n    let items = [...matrix];\n\n    if (items[row][col] === 1) {\n      items[row][col] = 0;\n    } else {\n      items[row][col] = 1;\n    }\n\n    setMatrix(items);\n    console.log(matrix);\n    checkIfCanRun();\n  };\n\n  const generateImages = () => {\n    const newRelations = [];\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (matrix[i][j] === 1) {\n          let yValue;\n          let xValue;\n          if (yAxis.length === 1) {\n            yValue = yAxis[0].value;\n          } else {\n            yValue = yAxis[i].value;\n          }\n          xValue = xAxis[j + 1].value;\n          let relation = `<${xValue}, ${yValue}>`;\n\n          newRelations.push(relation);\n        }\n      }\n    }\n    setRelation(newRelations);\n  };\n\n  const checkIfInjection = () => {\n    if (matrix.length === 1) {\n      let match = false;\n      for (let i = 0; i < matrix[0].length; i++) {\n        if (matrix[0][i] == 1) {\n          if (match) {\n            return false;\n          } else {\n            match = true;\n          }\n        }\n      }\n      return true;\n    }\n\n    for (let i = 0; i < matrix.length; i++) {\n      let match = false;\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (matrix[i][j] === 1) {\n          if (match) {\n            return false;\n          } else {\n            match = true;\n          }\n        }\n      }\n    }\n    return true;\n  };\n\n  const checkIfSurjective = () => {\n    if (matrix.length === 1) {\n      console.log(matrix[0].some((x) => x !== 1));\n      console.log(\"here\");\n      return !matrix[0].some((x) => x !== 1);\n    }\n\n    const columnLength = yAxis.length;\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < columnLength; j++) {\n        if (matrix[j][i] === 1) {\n          break;\n        }\n        if (j === columnLength - 1) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  const checkIfFunction = () => {\n    if (matrix.length === 1) {\n      return true;\n    }\n    const columnLength = yAxis.length;\n    for (let i = 0; i < matrix.length; i++) {\n      let match = false;\n      for (let j = 0; j < columnLength; j++) {\n        if (matrix[j][i] === 1) {\n          if (match) {\n            return false;\n          } else {\n            match = true;\n          }\n        }\n      }\n    }\n    return true;\n  };\n\n  const handleRun = () => {\n    const isFunction = checkIfFunction();\n    if (isFunction) {\n      generateImages();\n      const isInjection = checkIfInjection();\n      const isSurjective = checkIfSurjective();\n\n      if (isInjection && isSurjective) {\n        setAnswer(\"Dotais attēlojums ir Bijekcija\");\n        return;\n      } else if (isInjection) {\n        setAnswer(\"Dotais attēlojums ir Injekcija\");\n        return;\n      } else if (isSurjective) {\n        setAnswer(\"Dotais attēlojums ir Sirjekcija\");\n        return;\n      }\n    } else {\n      setAnswer(\"Dotais attēlojums nav funkcija\");\n    }\n  };\n\n  const checkIfCanRun = () => {\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (matrix[i][j] === 1) {\n          console.log(\"Testing\");\n          setCanRun(true);\n          return;\n        }\n      }\n    }\n    setCanRun(false);\n  };\n\n  return (\n    <Grid container style={{ display: \"flex\", justifyContent: \"center\" }}>\n      {x === 0 && y === 0 ? (\n        <Grid item xs={6} style={{ marginTop: \"2rem\" }}>\n          <Typography variant=\"h6\" textAlign=\"center\">\n            Ievadiet kopu lielumus\n          </Typography>{\" \"}\n        </Grid>\n      ) : (\n        <Grid item xs={6}>\n          <TableContainer\n            component={Paper}\n            sx={{ minWidth: 250, maxWidth: 550, marginLeft: \"2rem\" }}\n          >\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  {xAxis.map((row, index) => (\n                    <TableCell key={index} width=\"100px\" align=\"center\">\n                      {index == 0 ? (\n                        <Avatar\n                          sx={{\n                            bgcolor: canSetRelation ? \"#57C991\" : \"#E30639\",\n                            marginLeft: \"2rem\",\n                          }}\n                        >\n                          {canSetRelation ? <CheckIcon /> : <ClearIcon />}\n                        </Avatar>\n                      ) : (\n                        <TextField\n                          id=\"outlined-basic\"\n                          variant=\"outlined\"\n                          placeholder=\"?\"\n                          value={xAxis[index].value}\n                          onChange={(event) =>\n                            onXAxisChange(index, event.target.value)\n                          }\n                          error={row.error}\n                          inputProps={{ style: { textAlign: \"center\" } }}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {matrix.map((row, index) => (\n                  <TableRow\n                    key={index}\n                    sx={{\n                      \"&:last-child td, &:last-child th\": { border: 0 },\n                    }}\n                  >\n                    {\n                      <TableCell align=\"center\" key={index}>\n                        {\" \"}\n                        <TextField\n                          id=\"outlined-basic\"\n                          variant=\"outlined\"\n                          error={yAxis[index].error}\n                          value={yAxis[index].value}\n                          placeholder=\"?\"\n                          onChange={(event) =>\n                            onYAxisChange(index, event.target.value)\n                          }\n                          inputProps={{ style: { textAlign: \"center\" } }}\n                        />\n                      </TableCell>\n                    }\n                    {row.map((row2, index1) => (\n                      <TableCell\n                        align=\"center\"\n                        key={index1}\n                        style={{\n                          backgroundColor: row2 === 1 ? \"#57C991\" : \"white\",\n                        }}\n                        onClick={() => {\n                          changeRelation(index, index1);\n                        }}\n                      >\n                        {row2}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      )}\n      {x === 0 && y === 0 ? null : (\n        <Grid item xs={6}>\n          <Paper elevation={3} style={{ height: \"100%\" }}>\n            {canSetRelation ? (\n              <Typography variant=\"h6\" textAlign=\"center\">\n                Varat ievadīt attēlojumus, lai to izdarīto uzklišķiniet ar peli.\n              </Typography>\n            ) : (\n              <Typography variant=\"h6\" textAlign=\"center\">\n                Aizpildiet ludzu tabulu\n              </Typography>\n            )}\n            {canSetRelation ? (\n              <Grid\n                item\n                xs={12}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  marginTop: \"2rem\",\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  onClick={handleRun}\n                  disabled={!canRun}\n                >\n                  Run\n                </Button>\n              </Grid>\n            ) : null}\n            <Grid item xs={12}>\n              {answer.length > 0 ? (\n                <Typography variant=\"h6\">\n                  F = &#123;{\" \"}\n                  {relations.map(\n                    (relation, index) =>\n                      relation + (index === relations.length - 1 ? \"\" : \",\")\n                  )}{\" \"}\n                  &#125;\n                  <br />\n                  {answer}\n                </Typography>\n              ) : // <Typography></Typography>\n              null}\n            </Grid>\n          </Paper>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\nexport default SetBuilder;\n","import { Paper, Menu, MenuItem, Button, Typography, Grid } from \"@mui/material\";\nimport { useState } from \"react\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport SetBuilder from \"./SetBuilder\";\nconst Exercise1_2 = () => {\n  const sizeX = [1, 2, 3, 4, 5];\n  const sizeY = [1, 2, 3, 4, 5, 6, 7];\n\n  const [anchorElX, setAnchorElX] = useState(null);\n  const [anchorElY, setAnchorElY] = useState(null);\n\n  const [x, setX] = useState(1);\n  const [y, setY] = useState(1);\n\n  const handleOpenXMenu = (event: any) => {\n    setAnchorElX(event.currentTarget);\n  };\n  const handleCloseXMenu = () => {\n    setAnchorElX(null);\n  };\n  const openXMenu = Boolean(anchorElX);\n\n  const handleOpenYMenu = (event: any) => {\n    setAnchorElY(event.currentTarget);\n  };\n  const handleCloseYMenu = () => {\n    setAnchorElY(null);\n  };\n  const openYMenu = Boolean(anchorElY);\n\n  const changeX = (choice: number): void => {\n    setX(choice);\n    setAnchorElX(null);\n    \n  };\n  const changeY = (choice: number): void => {\n    setY(choice);\n    setAnchorElY(null);\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      style={{ height: \"100%\", width: \"100%\", backgroundColor: \"#d9e9e4\" }}\n    >\n      <Grid container xs={12} spacing={2} justifyContent=\"center\">\n        <Grid item xs={2} style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Typography variant=\"h6\">Kopas X elementu skaits</Typography>\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            id=\"demo-positioned-button\"\n            aria-controls=\"demo-positioned-menu\"\n            aria-haspopup=\"true\"\n            aria-expanded={openXMenu ? \"true\" : undefined}\n            onClick={handleOpenXMenu}\n          >\n            <Typography variant=\"h5\">{x}</Typography>\n            <ArrowDropDownIcon />\n          </Button>\n          <Menu\n            id=\"demo-positioned-menu\"\n            aria-labelledby=\"demo-positioned-button\"\n            anchorEl={anchorElX}\n            open={openXMenu}\n            onClose={handleCloseXMenu}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n            }}\n          >\n            {sizeX.map((menuItem) => (\n              <MenuItem onClick={() => changeX(menuItem)}>{menuItem}</MenuItem>\n            ))}\n          </Menu>\n        </Grid>\n      </Grid>\n      <Grid container xs={12} spacing={2} justifyContent=\"center\">\n        <Grid item xs={2} style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Typography variant=\"h6\">Kopas Y elementu skaits</Typography>\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            id=\"demo-positioned-button\"\n            aria-controls=\"demo-positioned-menu\"\n            aria-haspopup=\"true\"\n            aria-expanded={openYMenu ? \"true\" : undefined}\n            onClick={handleOpenYMenu}\n          >\n            <Typography variant=\"h5\">{y}</Typography>\n            <ArrowDropDownIcon />\n          </Button>\n          <Menu\n            id=\"demo-positioned-menu\"\n            aria-labelledby=\"demo-positioned-button\"\n            anchorEl={anchorElY}\n            open={openYMenu}\n            onClose={handleCloseYMenu}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n            }}\n          >\n            {sizeY.map((menuItem) => (\n              <MenuItem onClick={() => changeY(menuItem)}>{menuItem}</MenuItem>\n            ))}\n          </Menu>\n        </Grid>\n        <SetBuilder x={x} y={y}></SetBuilder>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Exercise1_2;\n","import {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n} from \"@mui/material\";\nimport { useState } from \"react\";\n\nconst DecartMatrix = ({ setMatrixCallback }: any) => {\n  const givenSet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"];\n\n  const [matrix, setMatrix] = useState<number[][]>([\n    [0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0],\n  ]);\n\n  const handleClick = (row: number, col: number) => {\n    let items = [...matrix];\n\n    if (items[row][col] === 1) {\n      items[row][col] = 0;\n    } else {\n      items[row][col] = 1;\n    }\n\n    setMatrix(items);\n    setMatrixCallback(matrix);\n  };\n\n  return (\n    <TableContainer\n      component={Paper}\n      sx={{ minWidth: 250, maxWidth: 550, marginLeft: \"2rem\" }}\n    >\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell key=\"empty\" width=\"100px\" align=\"center\"></TableCell>\n            {givenSet.map((value, index) => (\n              <TableCell key={index} align=\"center\">\n                <Typography variant=\"h6\"> {value}</Typography>\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell key=\"a\" align=\"center\">\n              <Typography variant=\"h6\"> {givenSet[0]}</Typography>\n            </TableCell>\n            {matrix[0].map((value, index) => (\n              <TableCell\n                key={index}\n                align=\"center\"\n                onClick={() => handleClick(0, index)}\n                style={{\n                  backgroundColor: value === 1 ? \"#57C991\" : \"white\",\n                }}\n              >\n                {value}\n              </TableCell>\n            ))}\n          </TableRow>\n          <TableRow>\n            <TableCell key=\"b\" align=\"center\">\n              <Typography variant=\"h6\"> {givenSet[1]}</Typography>\n            </TableCell>\n            {matrix[1].map((value, index) => (\n              <TableCell\n                key={index}\n                align=\"center\"\n                onClick={() => handleClick(1, index)}\n                style={{\n                  backgroundColor: value === 1 ? \"#57C991\" : \"white\",\n                }}\n              >\n                {value}\n              </TableCell>\n            ))}\n          </TableRow>\n          <TableRow>\n            <TableCell key=\"c\" align=\"center\">\n              <Typography variant=\"h6\"> {givenSet[2]}</Typography>\n            </TableCell>\n            {matrix[2].map((value, index) => (\n              <TableCell\n                key={index}\n                align=\"center\"\n                onClick={() => handleClick(2, index)}\n                style={{\n                  backgroundColor: value === 1 ? \"#57C991\" : \"white\",\n                }}\n              >\n                {value}\n              </TableCell>\n            ))}\n          </TableRow>\n          <TableRow>\n            <TableCell key=\"d\" align=\"center\">\n              <Typography variant=\"h6\"> {givenSet[3]}</Typography>\n            </TableCell>\n            {matrix[3].map((value, index) => (\n              <TableCell\n                key={index}\n                align=\"center\"\n                onClick={() => handleClick(3, index)}\n                style={{\n                  backgroundColor: value === 1 ? \"#57C991\" : \"white\",\n                }}\n              >\n                {value}\n              </TableCell>\n            ))}\n          </TableRow>\n          <TableRow>\n            <TableCell key=\"e\" align=\"center\">\n              <Typography variant=\"h6\"> {givenSet[4]}</Typography>\n            </TableCell>\n            {matrix[4].map((value, index) => (\n              <TableCell\n                key={index}\n                align=\"center\"\n                onClick={() => handleClick(4, index)}\n                style={{\n                  backgroundColor: value === 1 ? \"#57C991\" : \"white\",\n                }}\n              >\n                {value}\n              </TableCell>\n            ))}\n          </TableRow>\n          <TableRow>\n            <TableCell key=\"f\" align=\"center\">\n              <Typography variant=\"h6\"> {givenSet[5]}</Typography>\n            </TableCell>\n            {matrix[5].map((value, index) => (\n              <TableCell\n                key={index}\n                align=\"center\"\n                onClick={() => handleClick(5, index)}\n                style={{\n                  backgroundColor: value === 1 ? \"#57C991\" : \"white\",\n                }}\n              >\n                {value}\n              </TableCell>\n            ))}\n          </TableRow>\n          <TableRow>\n            <TableCell key=\"g\" align=\"center\">\n              <Typography variant=\"h6\"> {givenSet[6]}</Typography>\n            </TableCell>\n            {matrix[6].map((value, index) => (\n              <TableCell\n                key={index}\n                align=\"center\"\n                onClick={() => handleClick(6, index)}\n                style={{\n                  backgroundColor: value === 1 ? \"#57C991\" : \"white\",\n                }}\n              >\n                {value}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default DecartMatrix;\n","import { Paper, Grid, Box, IconButton } from \"@mui/material\";\n\nimport { ModalUnstyled } from \"@mui/core\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { styled } from \"@mui/system\";\nimport { AlgorithmType } from \"./Exercise2_2\";\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled(\"div\")`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 1200,\n  height: 750,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nconst ReflexiveModal = ({ show, closeHandler }: any) => {\n  return (\n    <StyledModal\n      open={show}\n      BackdropComponent={Backdrop}\n      onClose={() => closeHandler(AlgorithmType.REFLEXIVE)}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Grid container xs={12}>\n          <Grid item xs={11}>\n            <h2> Refleksīvas īpašības algoritms</h2>\n          </Grid>\n          <Grid\n            item\n            xs={1}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <IconButton\n              color=\"inherit\"\n              edge=\"end\"\n              size=\"large\"\n              onClick={() => closeHandler(AlgorithmType.REFLEXIVE)}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <Paper elevation={6} style={{ backgroundColor: \"#98AFBA\" }}>\n                <Box display=\"flex\" justifyContent=\"center\">\n                  <img\n                    src=\"/homework2/block_diagramma_1.png\"\n                    height=\"100%\"\n                    width=\"100%\"\n                  />\n                </Box>\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper elevation={6}>\n                <pre\n                  style={{ color: \"blue\" }}\n                >{`const checkIfReflexive = () => {\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        //parbaudam vai galvena diogonale \n        //visi ir vieninieki\n        if (i === j && matrix[i][j] !== 1) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };`}</pre>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </StyledModal>\n  );\n};\n\nexport default ReflexiveModal;\n","import { Paper, Grid, Box, IconButton } from \"@mui/material\";\n\nimport { ModalUnstyled } from \"@mui/core\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { styled } from \"@mui/system\";\nimport { AlgorithmType } from \"./Exercise2_2\";\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled(\"div\")`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 1200,\n  height: 750,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nconst SymetricModal = ({ show, closeHandler }: any) => {\n  return (\n    <StyledModal\n      open={show}\n      BackdropComponent={Backdrop}\n      onClose={() => closeHandler(AlgorithmType.SYMMETRIC)}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Grid container xs={12}>\n          <Grid item xs={11}>\n            <h2> Simetriskuma īpašības algoritms</h2>\n          </Grid>\n          <Grid\n            item\n            xs={1}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <IconButton\n              color=\"inherit\"\n              edge=\"end\"\n              size=\"large\"\n              onClick={() => closeHandler(AlgorithmType.SYMMETRIC)}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <Paper elevation={6} style={{ backgroundColor: \"#98AFBA\" }}>\n                <Box display=\"flex\" justifyContent=\"center\">\n                  <img\n                    src=\"/homework2/block_diagramma_2.png\"\n                    height=\"90%\"\n                    width=\"90%\"\n                  />\n                </Box>\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper elevation={6}>\n                <pre style={{ color: \"blue\" }}>{`const checkIfSymetric = () => {\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n          //ja ir attieksmi  no labas puses\n          // tad jabut ari no kreisas \n          //(attieciba pret galveno diogonali)\n          //ja tadas nav tad nav simmetriska\n        if (i !== j) {\n          if (matrix[i][j] === 1 && matrix[j][i] !== 1) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  };`}</pre>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </StyledModal>\n  );\n};\n\nexport default SymetricModal;\n","import { Paper, Grid, Box, IconButton } from \"@mui/material\";\n\nimport { ModalUnstyled } from \"@mui/core\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { styled } from \"@mui/system\";\nimport { AlgorithmType } from \"./Exercise2_2\";\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled(\"div\")`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 1200,\n  height: 750,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nconst TransitiveModal = ({ show, closeHandler }: any) => {\n  return (\n    <StyledModal\n      open={show}\n      BackdropComponent={Backdrop}\n      onClose={() => closeHandler(AlgorithmType.TRANSITIVE)}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Grid container xs={12}>\n          <Grid item xs={11}>\n            <h2> Transitivas īpašības algoritms</h2>\n          </Grid>\n          <Grid\n            item\n            xs={1}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <IconButton\n              color=\"inherit\"\n              edge=\"end\"\n              size=\"large\"\n              onClick={() => closeHandler(AlgorithmType.TRANSITIVE)}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <Paper elevation={6} style={{ backgroundColor: \"#98AFBA\" }}>\n                <Box display=\"flex\" justifyContent=\"center\">\n                  <img\n                    src=\"/homework2/block_diagramma_3.png\"\n                    height=\"75%\"\n                    width=\"75%\"\n                  />\n                </Box>\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper elevation={6}>\n                <pre\n                  style={{ color: \"blue\" }}\n                >{`const checkIfTransitive = () => {\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (i !== j && matrix[i][j] === 1) {\n          for (let k = 0; k <= i; k++) {\n            if (j !== k && matrix[j][k] === 1 \n                && matrix[i][k] !== 1) {\n              return false;\n            }\n          }\n        }\n      }\n    }\n    return true;\n  };`}</pre>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </StyledModal>\n  );\n};\n\nexport default TransitiveModal;\n","import { Paper, Grid, Box, Typography } from \"@mui/material\";\n\nconst Exercise2_3 = () => {\n  return (\n    <Paper\n      elevation={3}\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        backgroundColor: \"#d9e9e4\",\n        marginTop: \"2rem\",\n      }}\n    >\n      <Grid container xs={12} spacing={2} justifyContent=\"center\">\n        <Grid item xs={6}>\n          <Typography variant=\"h6\" textAlign=\"center\">\n            Veidot grafu, kurš kopai &#123; 2,3,6,4,9,12,36,72 &#125; uzrāda\n            attiecību R: “dalās bez atlikuma”.\n          </Typography>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <img src=\"/homework2/hasse_3.png\" />\n          </Box>\n        </Grid>\n        <Grid item xs={6}>\n          <Grid container>\n            <Grid item xs={12}>\n              sup&#123; 2,6 &#125; = 12\n            </Grid>\n            <Grid item xs={12}>\n              inf&#123; 4,36 &#125; = 4\n            </Grid>\n            <Grid item xs={12}>\n              sup&#123; 4,9 &#125; = neeksiste\n            </Grid>\n            <Grid item xs={12}>\n              sup&#123; 4,12 &#125; = 36\n            </Grid>\n            <Grid item xs={12}>\n              inf&#123; 6,72 &#125; = 6\n            </Grid>\n            <Grid item xs={12}>\n              inf&#123; 9,72 &#125; = 9\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Exercise2_3;\n","import { Grid, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport ExerciseSwitcher from \"../homework_1/ExerciseSwitcher\";\nimport Exercise1_2 from \"./Exercise1_2\";\nimport Exercise2_2 from \"./Exercise2_2\";\nimport Exercise2_3 from \"./Exercise2_3\";\n\ninterface Exercise {\n  name: string;\n}\nconst exercies: Exercise[] = [\n  { name: \"1.Uzdevums\" },\n  { name: \"2.Uzdevums\" },\n  { name: \"3.Uzdevums\" },\n];\n\nconst HomeWork2 = () => {\n  const [currentExercise, setCurrentExercise] = useState(0);\n\n  const handleNextEx = (): void => {\n    if (currentExercise !== exercies.length - 1) {\n      setCurrentExercise(currentExercise + 1);\n    }\n  };\n\n  const handlePrevEx = (): void => {\n    if (currentExercise !== 0) {\n      setCurrentExercise(currentExercise - 1);\n    }\n  };\n\n  const getExercise = () => {\n    switch (currentExercise) {\n      case 0:\n        return <Exercise1_2></Exercise1_2>;\n      case 1:\n        return <Exercise2_2></Exercise2_2>;\n      case 2:\n        return <Exercise2_3></Exercise2_3>;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item xs={12} style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Grid item xs={9}>\n          <Typography variant=\"h2\" component=\"h2\">\n            {exercies[currentExercise].name}\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <ExerciseSwitcher\n            nextEx={handleNextEx}\n            currentEx={currentExercise}\n            prevEx={handlePrevEx}\n          ></ExerciseSwitcher>\n        </Grid>\n      </Grid>\n      {getExercise()}\n    </Grid>\n  );\n};\n\nexport default HomeWork2;\n","import * as React from \"react\";\nimport { styled, useTheme, Theme, CSSObject } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport { Link } from \"react-router-dom\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useLocation,\n} from \"react-router-dom\";\nimport HomeWork1 from \"../homework_1/HomeWork_1\";\nimport HomeWork2 from \"../homework_2/HomeWork2\";\nimport { TurnedInTwoTone } from \"@mui/icons-material\";\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(9)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nconst homeWorks: string[] = [\"MD1\", \"MD2\"];\n\ninterface HomeWork {\n  name: string;\n  routePath: string;\n}\n\nconst homeWorkObjects: HomeWork[] = [\n  { name: \"MD1\", routePath: \"/\" },\n  { name: \"MD2\", routePath: \"/MD1\" },\n];\n\nexport default function MiniDrawer() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open} color=\"secondary\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{\n              marginRight: \"36px\",\n\n              ...(open && { display: \"none\" }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" noWrap component=\"div\" fontWeight=\"bold\">\n            Artjoms Žerebkovs (12.v)\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer variant=\"permanent\" open={open}>\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {homeWorkObjects.map((homework, index) => (\n            <ListItem\n              button\n              component={Link}\n              to={homework.routePath}\n              key={homework.name}\n            >\n              <ListItemIcon\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <DescriptionIcon\n                  style={{ fontSize: \"30px\", marginRight: \"5px\" }}\n                ></DescriptionIcon>\n                {open ? null : (\n                  <div style={{ marginTop: \"10px\" }}>{homework.name}</div>\n                )}\n              </ListItemIcon>\n              <ListItemText primary={homework.name} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n        <DrawerHeader />\n\n        <Switch>\n          <Route exact path=\"/\" component={HomeWork1} />\n          <Route exact path=\"/md1\" component={HomeWork2} />\n        </Switch>\n      </Box>\n    </Box>\n  );\n}\n","import { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}